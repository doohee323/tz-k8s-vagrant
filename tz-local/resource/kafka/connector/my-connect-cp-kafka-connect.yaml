apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: my-connect
    meta.helm.sh/release-namespace: kafka
  creationTimestamp: "2020-12-30T20:58:22Z"
  generation: 1
  labels:
    app: cp-kafka-connect
    app.kubernetes.io/managed-by: Helm
    chart: cp-kafka-connect-0.1.0
    heritage: Helm
    release: my-connect
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/managed-by: {}
          f:chart: {}
          f:heritage: {}
          f:release: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:release: {}
          f:spec:
            f:containers:
              k:{"name":"cp-kafka-connect-server"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"CONNECT_BOOTSTRAP_SERVERS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_CONFIG_STORAGE_TOPIC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_GROUP_ID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_INTERNAL_KEY_CONVERTER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_INTERNAL_VALUE_CONVERTER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_KEY_CONVERTER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_OFFSET_STORAGE_TOPIC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_PLUGIN_PATH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_REST_ADVERTISED_HOST_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"CONNECT_STATUS_STORAGE_REPLICATION_FACTOR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_STATUS_STORAGE_TOPIC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_VALUE_CONVERTER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_HEAP_OPTS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_JMX_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8083,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: Go-http-client
    operation: Update
    time: "2020-12-30T20:58:22Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:replicas: {}
        f:unavailableReplicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-12-30T22:10:07Z"
  name: my-connect-cp-kafka-connect
  namespace: kafka
  resourceVersion: "318880"
  uid: 7a607a57-1ca5-4a72-96d3-11bcc9151f81
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cp-kafka-connect
      release: my-connect
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cp-kafka-connect
        release: my-connect
    spec:
      containers:
      - env:
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: kafka-headless:9092
        - name: CONNECT_GROUP_ID
          value: my-connect
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: my-connect-cp-kafka-connect-config
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: my-connect-cp-kafka-connect-offset
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: my-connect-cp-kafka-connect-status
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://my-schema-cp-schema-registry:8081
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://my-schema-cp-schema-registry:8081
        - name: KAFKA_HEAP_OPTS
          value: -Xms512M -Xmx512M
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_KEY_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_PLUGIN_PATH
          value: /usr/share/java,/usr/share/confluent-hub-components
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_VALUE_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: KAFKA_JMX_PORT
          value: "5555"
        image: confluentinc/cp-kafka-connect:6.0.1
        imagePullPolicy: IfNotPresent
        name: cp-kafka-connect-server
        ports:
        - containerPort: 8083
          name: kafka-connect
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2020-12-30T20:58:22Z"
    lastUpdateTime: "2020-12-30T20:58:25Z"
    message: ReplicaSet "my-connect-cp-kafka-connect-75778bd8f6" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-12-30T22:10:07Z"
    lastUpdateTime: "2020-12-30T22:10:07Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
